plugins {
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.13,6.2)'
    id 'net.darkhax.curseforgegradle' version '1.0.7'
}

base {
    archivesName = "${mod_id}-${mc_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(javaVersion as int)

jarJar.enable()

minecraft {
    mappings channel: 'official', version: "${mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    enableEclipsePrepareRuns = true
    copyIdeResources = true
    generateRunFolders = true

    runs {
        create("client") {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        create("server") {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            args "--nogui"
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        create("data") {
            workingDirectory project.file('run-data')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        url = "https://maven.parchmentmc.org"
        content { includeGroup "org.parchmentmc.data" }
    }
    mavenLocal()
    flatDir { dir 'libs' }

    maven { name = "Iron's Maven - Release"; url = "https://code.redspace.io/releases" }
    maven { name = "Iron's Maven - Snapshots"; url = "https://code.redspace.io/snapshots" }
    maven { url = "https://maven.enginehub.org/repo/" }
    maven {
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content { includeGroup "software.bernie.geckolib" }
    }
    maven {
        url "https://maven.shadowsoffire.dev/releases"
        content { includeGroup "dev.shadowsoffire" }
    }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.kosmx.dev/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation ("io.redspace.ironsspellbooks:irons_spellbooks:${irons_spells_version}")
    compileOnly ("io.redspace.ironsspellbooks:irons_spellbooks:${irons_spells_version}:api")
    runtimeOnly("io.redspace.ironsspellbooks:irons_spellbooks:${irons_spells_version}")

    runtimeOnly ("software.bernie.geckolib:geckolib-forge-${geckolib_version}")
    runtimeOnly ("top.theillusivec4.caelus:caelus-forge:${caelus_version}")
    implementation ("dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}")
    implementation ("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    implementation fg.deobf("curse.maven:apothic-attributes-898963:5634071")
    implementation ("curse.maven:placebo-283644:6274231")

    runtimeOnly ("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly ("top.theillusivec4.curios:curios-forge:${curios_version}:api")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    inputs.property "version", project.version
    filesMatching("META-INF/mods.toml") {
        expand([
                mod_id: mod_id,
                mod_name: mod_name,
                mod_version: mod_version,
                mod_authors: mod_authors,
                mod_license: mod_license,
                mod_description: mod_description
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = "file://${project.projectDir}/repo"
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}